---
name: Push to ECR

on:
  push:
    branches: [ master ]  # Change this to your main branch name

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-3  # Change this to your desired AWS region

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        run: |
          docker build -t node-app:latest .
          docker tag node-app:latest ${{ steps.login-ecr.outputs.registry }}/vanzoel:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/vanzoel:latest
          
      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}  # EC2 instance public IP or hostname
          username: ${{ secrets.EC2_USERNAME }}  # SSH username
          key: ${{ secrets.EC2_PRIVATE_KEY }}  # Private key for authentication
          script: |
            # Stop and remove existing container (if any)
            ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker stop node-app || true"
            ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker rm node-app || true"

            # Pull and run the new image
            ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker pull ${{ steps.login-ecr.outputs.registry }}/vanzoel:latest"
            ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker run -d --name node-app -p 9005:9005 ${{ steps.login-ecr.outputs.registry }}/vanzoel:latest"
