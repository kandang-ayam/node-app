stages:
    - build
    - deploy
variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_TLS_CERTDIR: "/certs"
build:
    stage: build
    image: docker:latest
    services:
        - docker:dind
    before_script:
        - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASS"
    script:
        - docker build -t node:$CI_PIPELINE_ID .
        - docker tag node:$CI_PIPELINE_ID panjol/node:$CI_PIPELINE_ID
        - docker push panjol/node:$CI_PIPELINE_ID
    artifacts:
        paths:
            - /tmp/build/*
    allow_failure: false

deploy:
    stage: deploy
    image: google/cloud-sdk:alpine
    script:
        - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
        - gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
        - gcloud container clusters get-credentials autopilot-cluster --region $GCP_REGION --project $GCP_PROJECT_ID
        
        # Deploy the application
        - kubectl set image deployment/node-app node-app=docker.io/$DOCKER_HUB_USER/node-app:$CI_PIPELINE_ID --record
    dependencies:
        - build
    environment:
        name: production