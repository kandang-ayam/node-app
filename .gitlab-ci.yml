stages:
    - login
    - build
    - deploy
variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://localhost:2375

login:
    stage: login
    image: ubuntu:latest

    #services:
        #- name: docker:dind
         # command: ["--insecure-registries=35.198.197.144:80"]
        
    before_script:
        - apt update
        - apt-get install ca-certificates curl gnupg lsb-release -y
        - mkdir -m 0755 -p /etc/apt/keyrings
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
        - apt update
        - apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
        #- mkdir /etc/docker/
        - echo $HARBOR_FILE > /etc/docker/daemon.json
        
    
    script:
        - echo "$HARBOR_PASS" | docker login 35.198.197.144:80 -u "$HARBOR_USR" --password-stdin
    artifacts:
        paths:
            - /tmp/login/*
    
build:
    stage: build
    image: docker:latest
    services:
        - name: docker:dind
    script:
        - docker build -t node:$CI_PIPELINE_ID .
        - docker tag node:$CI_PIPELINE_ID $HARBOR_URL/vanzoel/node:$CI_PIPELINE_ID
        - docker push $HARBOR_URL/vanzoel/node:$CI_PIPELINE_ID
    artifacts:
        paths:
            - Dockerfile
    allow_failure: false
    dependencies:
        - login

deploy:
    stage: deploy
    image: google/cloud-sdk:alpine
    script:
        - gcloud auth activate-service-account --key-file=$SERVICE_ACCOUNT_KEY
        
        #


        - gcloud components install kubectl


        #- sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" serivce.yaml

        - kubectl apply -f service.yml

    dependencies:
        - build
#    environment:
 #       name: production
