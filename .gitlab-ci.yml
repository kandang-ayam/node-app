stages:
    - build
    - deploy
variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_TLS_CERTDIR: "/certs"
build:
    stage: build
    image: docker:latest
    services:
        - docker:dind
    before_script:
        - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASS"
    script:
        - docker build -t node:$CI_PIPELINE_ID .
        - docker tag node:$CI_PIPELINE_ID panjol/node:$CI_PIPELINE_ID
        - docker push panjol/node:$CI_PIPELINE_ID
    artifacts:
        paths:
            - Dockerfile
    allow_failure: false

deploy:
    stage: deploy
    image: google/cloud-sdk:alpine
    script:
      - apk add --update --no-cache curl
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
      - echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
      - apk install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - mkdir -p /kubeconfig
      - echo "$KUBECONFIG_CONTENTS" | base64 -d > $KUBECONFIG
      - kubectl config use-context $KUBE_CONTEXT
      - envsubst < service.yml | kubectl apply -f -
    dependencies:
        - build
    environment:
        name: production
