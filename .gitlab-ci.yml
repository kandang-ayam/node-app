stages:
    - login
    - build
    - deploy
variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_TLS_CERTDIR: "/certs"
login:
    stage: login
    image: docker:latest
        
    before_script:
        - mkdir /etc/docker/
        - echo $HARBOR_FILE > /etc/docker/daemon.json
        #- systemctl restart docker
        - sleep 5
    services:
        - name: docker:dind
          command: ["dockerd", "-s", "overlay2"]
          alias: docker
    script:
        - echo "$HARBOR_PASS" | docker login $HARBOR_URL -u "$HARBOR_USR" --password-stdin
    artifacts:
        paths:
            - /tmp/login/*
    
build:
    stage: build
    image: docker:latest
    services:
        - name: docker:dind
    script:
        - docker build -t node:$CI_PIPELINE_ID .
        - docker tag node:$CI_PIPELINE_ID $HARBOR_URL/vanzoel/node:$CI_PIPELINE_ID
        - docker push $HARBOR_URL/vanzoel/node:$CI_PIPELINE_ID
    artifacts:
        paths:
            - Dockerfile
    allow_failure: false
    dependencies:
        - login

deploy:
    stage: deploy
    image: google/cloud-sdk:alpine
    script:
        - gcloud auth activate-service-account --key-file=$SERVICE_ACCOUNT_KEY
        #- echo "$GCP_SERVICE_ACCOUNT_KEY" > /builds/kandang-ayam/node-app.tmp/key.json
        #
        #- gcloud config set project $GCP_PROJECT_ID
        #- gcloud config set container/cluster $GKE_CLUSTER
        #- gcloud config set compute/zone asia-south1-b
        #


        - gcloud components install kubectl
        #- kubectl config current-context
        #- gcloud auth activate-service-account --key-file=calm-vehicle-380009-f980783ece80.json

        #- gcloud auth application-default login
        #- gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $GCP_REGION --project $GCP_PROJECT_ID

        #- sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" serivce.yaml

        - kubectl apply -f service.yml

    dependencies:
        - build
#    environment:
 #       name: production
