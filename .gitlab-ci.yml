# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASS" 
    - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASS"

  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - docker build -t node:latest .
    - docker tag node:latest panjol/node:latest
    - docker push "panjol/node:latest"
  # Run this job in a branch where a Dockerfile exists
  only:
      - master

deploy:
  - image: alpine
  - stage: deploy
  - before_script: 
    - apk --no-cache add curl
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - ls
    - export KUBECONFIG=kubeconfig.yml
    - kubectl get nodes
    - kubectl apply -f service.yml

  - script:
    - kubectl rollout restart deployment node-app
  - only:
    - master 
